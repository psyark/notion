// Code generated by notion.doc2api; DO NOT EDIT.
// https://developers.notion.com/reference/file-object

package notion

import "encoding/json"

/*
ðŸ“˜The Notion API does not yet support uploading files to Notion.

File objects contain data about a file that is uploaded to Notion, or data about an external file that is linked to in Notion.

Page, embed, image, video, file, pdf, and bookmark block types all contain file objects. Icon and cover page object values also contain file objects.
*/
type File struct {
	Type     string        `json:"type"`
	Name     string        `json:"name,omitempty"` // UNDOCUMENTED
	File     *FileFile     `json:"file"`           // Notion-hosted files
	External *FileExternal `json:"external"`       // External files
}

func (File) isFileOrEmoji() {}

func (o File) MarshalJSON() ([]byte, error) {
	if o.Type == "" {
		switch {
		case defined(o.File):
			o.Type = "file"
		case defined(o.External):
			o.Type = "external"
		}
	}
	type Alias File
	data, err := json.Marshal(Alias(o))
	if err != nil {
		return nil, err
	}
	visibility := map[string]bool{
		"external": o.Type == "external",
		"file":     o.Type == "file",
	}
	return omitFields(data, visibility)
}

/*
Notion-hosted files

All Notion-hosted files have aÂ typeÂ ofÂ "file". The corresponding file specific object contains the following fields:

You can retrieve links to Notion-hosted files via the Retrieve block children endpoint.
*/
type FileFile struct {
	Url        string        `json:"url"`         // An authenticated S3 URL to the file. The URL is valid for one hour. If the link expires, then you can send an API request to get an updated URL.
	ExpiryTime ISO8601String `json:"expiry_time"` // The date and time when the link expires, formatted as anÂ ISO 8601 date timeÂ string.
}

/*
External files

An external file is any URL linked to in Notion that isnâ€™t hosted by Notion. All external files have a type of "external". The corresponding file specific object contains the following fields:

The Notion API supports adding, retrieving, and updating links to external files.
*/
type FileExternal struct {
	Url string `json:"url"` // A link to the externally hosted content.
}
