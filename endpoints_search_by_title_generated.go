// Code generated by notion.doc2api; DO NOT EDIT.
// https://developers.notion.com/reference/post-search

package notion

import (
	"context"
	"net/http"
)

/*
Searches all parent or child pages and databases that have been shared with an integration.

Returns allÂ [pages](https://developers.notion.com/reference/page)Â orÂ [databases](https://developers.notion.com/reference/database), excluding duplicated linked databases, that have titles that include theÂ `query`Â param. If noÂ `query`Â param is provided, then the response contains all pages or databases that have been shared with the integration. The results adhere to any limitations related to anÂ [integrationâ€™s capabilities](https://developers.notion.com/reference/capabilities).

To limit the request to search only pages or to search only databases, use theÂ `filter`Â param.

### Errors

Each Public API endpoint can return several possible error codes. See the [Error codes section](https://developers.notion.com/reference/status-codes#error-codes) of the Status codes documentation for more information.

> ðŸ“˜
>
> The Search endpoint supports pagination. To learn more about working with [paginated](https://developers.notion.com/reference/intro#pagination) responses, see theÂ pagination section of the Notion API Introduction.

> ðŸš§
>
> To search a specific database â€” not all databases shared with the integration â€” use the [Query a database](https://developers.notion.com/reference/post-database-query) endpoint instead.
*/
func (c *Client) SearchByTitle(ctx context.Context, params SearchByTitleParams, options ...callOption) (*Pagination[PageOrDatabase], error) {
	return call(
		ctx,
		c.accessToken,
		http.MethodPost,
		"/v1/search",
		params,
		func(u *Pagination[PageOrDatabase]) *Pagination[PageOrDatabase] {
			return u
		},
		options...,
	)
}

type SearchByTitleParams map[string]any

// The text that the API compares page and database titles against.
func (p SearchByTitleParams) Query(query string) SearchByTitleParams {
	p["query"] = query
	return p
}

// A set of criteria, `direction` and `timestamp` keys, that orders the results. The **only** supported timestamp value is `"last_edited_time"`. Supported `direction` values are `"ascending"` and `"descending"`. If `sort` is not provided, then the most recently edited results are returned first.
func (p SearchByTitleParams) Sort(sort Sort) SearchByTitleParams {
	p["sort"] = sort
	return p
}

// A set of criteria, `value` and `property` keys, that limits the results to either only pages or only databases. Possible `value` values are `"page"` or `"database"`. The only supported `property` value is `"object"`.
func (p SearchByTitleParams) Filter(filter SearchFilter) SearchByTitleParams {
	p["filter"] = filter
	return p
}

// A `cursor` value returned in a previous response that If supplied, limits the response to results starting after the `cursor`. If not supplied, then the first page of results is returned. Refer to [pagination](https://developers.notion.com/reference/intro#pagination) for more details.
func (p SearchByTitleParams) StartCursor(start_cursor string) SearchByTitleParams {
	p["start_cursor"] = start_cursor
	return p
}

// The number of items from the full list to include in the response. Maximum: `100`.
func (p SearchByTitleParams) PageSize(page_size int) SearchByTitleParams {
	p["page_size"] = page_size
	return p
}
