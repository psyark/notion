package notion

import (
	"encoding/json"
	"fmt"
	"testing"
)

// Code generated by notion.doc2api; DO NOT EDIT.
// https://developers.notion.com/reference/user

func TestUser_unmarshal(t *testing.T) {
	tests := []string{
		"{\n    \"object\": \"user\",\n    \"id\": \"9188c6a5-7381-452f-b3dc-d4865aa89bdf\",\n    \"name\": \"Test Integration\",\n    \"avatar_url\": null,\n    \"type\": \"bot\",\n    \"bot\": {\n        \"owner\": {\n        \"type\": \"workspace\",\n        \"workspace\": true\n        },\n \"workspace_name\": \"Ada Lovelaceâ€™s Notion\"\n    }\n}",
	}
	for _, wantStr := range tests {
		target := &User{}
		want := []byte(wantStr)
		if err := json.Unmarshal(want, target); err != nil {
			t.Fatal(fmt.Errorf("%w : %s", err, wantStr))
		}
		got, _ := json.Marshal(target)
		if want, got, ok := compareJSON(want, got); !ok {
			t.Fatal(fmt.Errorf("mismatch:\nwant: %s\ngot : %s", want, got))
		}
	}
}

func TestBotUserDataOwner_unmarshal(t *testing.T) {
	tests := []string{
		"{\n    \"type\": \"workspace\",\n    \"workspace\": true\n}",
	}
	for _, wantStr := range tests {
		target := &BotUserDataOwner{}
		want := []byte(wantStr)
		if err := json.Unmarshal(want, target); err != nil {
			t.Fatal(fmt.Errorf("%w : %s", err, wantStr))
		}
		got, _ := json.Marshal(target)
		if want, got, ok := compareJSON(want, got); !ok {
			t.Fatal(fmt.Errorf("mismatch:\nwant: %s\ngot : %s", want, got))
		}
	}
}
