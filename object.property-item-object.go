package notion

import "encoding/json"

// Code generated by notion.doc2api; DO NOT EDIT.
// https://developers.notion.com/reference/property-item-object

/*
A property_item object describes the identifier, type, and value of a page property. It's returned from the Retrieve a page property item
*/
type PropertyItem interface {
	isPropertyItem()
}

func (_ *TitlePropertyItem) isPropertyItem()          {}
func (_ *RichTextPropertyItem) isPropertyItem()       {}
func (_ *NumberPropertyItem) isPropertyItem()         {}
func (_ *SelectPropertyItem) isPropertyItem()         {}
func (_ *MultiSelectPropertyItem) isPropertyItem()    {}
func (_ *DatePropertyItem) isPropertyItem()           {}
func (_ *FormulaPropertyItem) isPropertyItem()        {}
func (_ *RelationPropertyItem) isPropertyItem()       {}
func (_ *RollupPropertyItem) isPropertyItem()         {}
func (_ *PeoplePropertyItem) isPropertyItem()         {}
func (_ *FilesPropertyItem) isPropertyItem()          {}
func (_ *CheckboxPropertyItem) isPropertyItem()       {}
func (_ *UrlPropertyItem) isPropertyItem()            {}
func (_ *EmailPropertyItem) isPropertyItem()          {}
func (_ *PhoneNumberPropertyItem) isPropertyItem()    {}
func (_ *CreatedTimePropertyItem) isPropertyItem()    {}
func (_ *CreatedByPropertyItem) isPropertyItem()      {}
func (_ *LastEditedTimePropertyItem) isPropertyItem() {}
func (_ *LastEditedByPropertyItem) isPropertyItem()   {}

func newPropertyItem(msg json.RawMessage) PropertyItem {
	var result PropertyItem
	switch string(getRawProperty(msg, "type")) {
	case "\"title\"":
		result = &TitlePropertyItem{}
	case "\"rich_text\"":
		result = &RichTextPropertyItem{}
	case "\"number\"":
		result = &NumberPropertyItem{}
	case "\"select\"":
		result = &SelectPropertyItem{}
	case "\"multi_select\"":
		result = &MultiSelectPropertyItem{}
	case "\"date\"":
		result = &DatePropertyItem{}
	case "\"formula\"":
		result = &FormulaPropertyItem{}
	case "\"relation\"":
		result = &RelationPropertyItem{}
	case "\"rollup\"":
		result = &RollupPropertyItem{}
	case "\"people\"":
		result = &PeoplePropertyItem{}
	case "\"files\"":
		result = &FilesPropertyItem{}
	case "\"checkbox\"":
		result = &CheckboxPropertyItem{}
	case "\"url\"":
		result = &UrlPropertyItem{}
	case "\"email\"":
		result = &EmailPropertyItem{}
	case "\"phone_number\"":
		result = &PhoneNumberPropertyItem{}
	case "\"created_time\"":
		result = &CreatedTimePropertyItem{}
	case "\"created_by\"":
		result = &CreatedByPropertyItem{}
	case "\"last_edited_time\"":
		result = &LastEditedTimePropertyItem{}
	case "\"last_edited_by\"":
		result = &LastEditedByPropertyItem{}
	default:
		panic(string(msg))
	}
	json.Unmarshal(msg, result)
	return result
}

/*
All property items
Each page property item object contains the following keys. In addition, it will contain a key corresponding with the value of type. The value is an object containing type-specific data. The type-specific data are described in the sections below.
*/
type propertyItemCommon struct {
	Object string `always:"property_item" json:"object"` // Always "property_item".
	Id     string `json:"id"`                            // Underlying identifier for the property. This identifier is guaranteed to remain constant when the property name changes. It may be a UUID, but is often a short random string.  The id may be used in place of name when creating or updating pages.
}

/*
Paginated property values
The title, rich_text, relation and people property items of are returned as a paginated list object of individual property_item objects in the results. An abridged set of the the properties found in the list object are found below, see the Pagination documentation for additional information.
*/
type PaginatedPropertyValue struct {
	Object       string         `always:"list" json:"object"`        // Always "list".
	Type         string         `always:"property_item" json:"type"` // Always "property_item".
	Results      []PropertyItem `json:"results"`                     // List of property_item objects.
	PropertyItem PropertyItem   `json:"property_item"`               // A property_item object that describes the property.
	NextUrl      string         `json:"next_url"`                    // The URL the user can request to get the next page of results.
}

// Title property values
type TitlePropertyItem struct {
	propertyItemCommon
	Type  string        `always:"title" json:"type"`
	Title RichTextArray `json:"title"` //  Title property value objects contain an array of rich text objects within the title property.
}

// Rich Text property values
type RichTextPropertyItem struct {
	propertyItemCommon
	Type     string        `always:"rich_text" json:"type"`
	RichText RichTextArray `json:"rich_text"` //  Rich Text property value objects contain an array of rich text objects within the rich_text property.
}

// Number property values
type NumberPropertyItem struct {
	propertyItemCommon
	Type string `always:"number" json:"type"`
}

// Select property values
type SelectPropertyItem struct {
	propertyItemCommon
	Type string `always:"select" json:"type"`
}

// Multi-select property values
type MultiSelectPropertyItem struct {
	propertyItemCommon
	Type string `always:"multi_select" json:"type"`
}

// Date property values
type DatePropertyItem struct {
	propertyItemCommon
	Type string `always:"date" json:"type"`
}

// Formula property values
type FormulaPropertyItem struct {
	propertyItemCommon
	Type string `always:"formula" json:"type"`
}

// Relation property values
type RelationPropertyItem struct {
	propertyItemCommon
	Type string `always:"relation" json:"type"`
}

// Rollup property values
type RollupPropertyItem struct {
	propertyItemCommon
	Type string `always:"rollup" json:"type"`
}

// People property values
type PeoplePropertyItem struct {
	propertyItemCommon
	Type string `always:"people" json:"type"`
}

// Files property values
type FilesPropertyItem struct {
	propertyItemCommon
	Type string `always:"files" json:"type"`
}

// Checkbox property values
type CheckboxPropertyItem struct {
	propertyItemCommon
	Type string `always:"checkbox" json:"type"`
}

// URL property values
type UrlPropertyItem struct {
	propertyItemCommon
	Type string `always:"url" json:"type"`
}

// Email property values
type EmailPropertyItem struct {
	propertyItemCommon
	Type string `always:"email" json:"type"`
}

// Phone number property values
type PhoneNumberPropertyItem struct {
	propertyItemCommon
	Type string `always:"phone_number" json:"type"`
}

// Created time property values
type CreatedTimePropertyItem struct {
	propertyItemCommon
	Type string `always:"created_time" json:"type"`
}

// Created by property values
type CreatedByPropertyItem struct {
	propertyItemCommon
	Type string `always:"created_by" json:"type"`
}

// Last edited time property values
type LastEditedTimePropertyItem struct {
	propertyItemCommon
	Type string `always:"last_edited_time" json:"type"`
}

// Last edited by property values
type LastEditedByPropertyItem struct {
	propertyItemCommon
	Type string `always:"last_edited_by" json:"type"`
}
