// Code generated by notion.doc2api; DO NOT EDIT.

package notion

import (
	"context"
	"fmt"
	uuid "github.com/google/uuid"
	"net/http"
)

// Update page properties
// https://developers.notion.com/reference/patch-page
func (c *Client) UpdatePageProperties(ctx context.Context, page_id uuid.UUID, params UpdatePagePropertiesParams, options ...callOption) (*Page, error) {
	co := &callOptions{
		accessToken: c.accessToken,
		method:      http.MethodPatch,
		params:      params,
		path:        fmt.Sprintf("/v1/pages/%v", page_id),
	}
	for _, o := range options {
		o(co)
	}
	return call(ctx, co, func(u *Page) *Page {
		return u
	})
}

type UpdatePagePropertiesParams map[string]any

// The property values to update for the page. The keys are the names or IDs of the property and the values are property values. If a page property ID is not included, then it is not changed.
func (p UpdatePagePropertiesParams) Properties(properties map[string]PropertyValue) UpdatePagePropertiesParams {
	p["properties"] = properties
	return p
}

// Set to true to delete a block. Set to false to restore a block.
func (p UpdatePagePropertiesParams) InTrash(in_trash bool) UpdatePagePropertiesParams {
	p["in_trash"] = in_trash
	return p
}

// A page icon for the page. Supported types are [external file object](https://developers.notion.com/reference/file-object) or [emoji object](https://developers.notion.com/reference/emoji-object).
func (p UpdatePagePropertiesParams) Icon(icon FileOrEmoji) UpdatePagePropertiesParams {
	p["icon"] = icon
	return p
}

// A cover image for the page. Only [external file objects](https://developers.notion.com/reference/file-object) are supported.
func (p UpdatePagePropertiesParams) Cover(cover File) UpdatePagePropertiesParams {
	p["cover"] = cover
	return p
}
