// Code generated by notion.doc2api; DO NOT EDIT.
// https://developers.notion.com/reference/patch-page

package notion

import (
	"context"
	"fmt"
	uuid "github.com/google/uuid"
	"net/http"
)

/*
Updates theÂ `properties`Â of a page in a database. TheÂ `properties`Â body param of this endpoint can only be used to update theÂ `properties`Â of a page that is a child of a database. The pageâ€™sÂ `properties`Â schema must match the parentÂ [databaseâ€™s properties](https://developers.notion.com/reference/property-object).

This endpoint can be used to update any pageÂ `icon`Â orÂ `cover`, and can be used toÂ [`delete`](https://developers.notion.com/reference/archive-a-page)Â or restore any page.

To add page content instead of page properties, use the [append block children](https://developers.notion.com/reference/patch-block-children) endpoint. The `page_id` can be passed as the `block_id` when adding block children to the page.

Returns the updated [page object](https://developers.notion.com/reference/page).

> ðŸ“˜ Requirements
>
> Your integration must have [update content capabilities](https://developers.notion.com/reference/capabilities#content-capabilities) on the target page in order to call this endpoint. To update your integrations capabilities, navigation to the [My integrations](https://www.notion.so/my-integrations) dashboard, select your integration, go to the **Capabilities** tab, and update your settings as needed.
>
> Attempting a query without update content capabilities returns an HTTP response with a 403 status code.

> ðŸš§ Limitations
>
> - Updating [rollup property values](https://developers.notion.com/reference/property-value-object#rollup-property-values) is not supported.
> - A pageâ€™s `parent` cannot be changed.

### Errors

Each Public API endpoint can return several possible error codes. See the [Error codes section](https://developers.notion.com/reference/status-codes#error-codes) of the Status codes documentation for more information.
*/
func (c *Client) UpdatePageProperties(ctx context.Context, page_id uuid.UUID, params UpdatePagePropertiesParams, options ...callOption) (*Page, error) {
	return call(
		ctx,
		c.accessToken,
		http.MethodPatch,
		fmt.Sprintf("/v1/pages/%v", page_id),
		params,
		func(u *Page) *Page {
			return u
		},
		options...,
	)
}

type UpdatePagePropertiesParams map[string]any

// The property values to update for the page. The keys are the names or IDs of the property and the values are property values. If a page property ID is not included, then it is not changed.
func (p UpdatePagePropertiesParams) Properties(properties map[string]PropertyValue) UpdatePagePropertiesParams {
	p["properties"] = properties
	return p
}

// Set to true to delete a block. Set to false to restore a block.
func (p UpdatePagePropertiesParams) InTrash(in_trash bool) UpdatePagePropertiesParams {
	p["in_trash"] = in_trash
	return p
}

// A page icon for the page. Supported types are [external file object](https://developers.notion.com/reference/file-object) or [emoji object](https://developers.notion.com/reference/emoji-object).
func (p UpdatePagePropertiesParams) Icon(icon FileOrEmoji) UpdatePagePropertiesParams {
	p["icon"] = icon
	return p
}

// A cover image for the page. Only [external file objects](https://developers.notion.com/reference/file-object) are supported.
func (p UpdatePagePropertiesParams) Cover(cover File) UpdatePagePropertiesParams {
	p["cover"] = cover
	return p
}
